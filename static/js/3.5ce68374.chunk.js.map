{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["checkoutSummary","props","className","styles","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","interacted","email","street","postalCode","minLength","maxLength","country","deliveryMethod","defaultValue","options","display","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","price","totalPrice","orderData","userId","onOrderBurger","token","checkFormIsValid","updatedOrderForm","inputIdentifier","inputChangedHandler","inputId","updatedFormElement","updateObject","target","checkValidity","updatedForm","setState","validity","formElementsArray","key","this","push","id","config","form","onSubmit","map","element","Input","elementValue","changed","invalid","shouldValidate","disabled","loading","Spinner","Component","connect","burgerBuilder","auth","dispatch","actions","withErrorHandler","axios","Checkout","salad","meat","bacon","cheese","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","purchaseRedirect","purchased","path","match","component","input","inputElement","inputClasses","InputElement","Invalid","join","onChange","option","label","module","exports"],"mappings":"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","file":"static/js/3.5ce68374.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nimport styles from \"./CheckoutSummary.module.css\";\r\n\r\nconst checkoutSummary = (props) => {\r\n  return (\r\n    <div className={styles.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../../shared/utility\";\r\n\r\nimport styles from \"./ContactData.module.css\";\r\n\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nexport class ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        interacted: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your Email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        interacted: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Street\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        interacted: false,\r\n      },\r\n      postalCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Postal Code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n          maxLength: 6,\r\n        },\r\n        valid: false,\r\n        interacted: false,\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Country\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        interacted: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          defaultValue: -1,\r\n          options: [\r\n            {\r\n              value: \"fastest\",\r\n              display: \"Fastest Delivery\",\r\n            },\r\n            {\r\n              value: \"Cheapest\",\r\n              display: \"Cheapest Delivery\",\r\n            },\r\n          ],\r\n        },\r\n        value: \"fastest\",\r\n        valid: false,\r\n        interacted: false,\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementId in this.state.orderForm) {\r\n      formData[formElementId] = this.state.orderForm[formElementId].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      orderData: formData,\r\n      userId: this.props.userId,\r\n    };\r\n    //console.log(order);\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  checkFormIsValid = (updatedOrderForm) => {\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    return formIsValid;\r\n  };\r\n\r\n  inputChangedHandler = (event, inputId) => {\r\n    const updatedFormElement = updateObject(this.state.orderForm[inputId], {\r\n      interacted: true,\r\n      value: event.target.value,\r\n      valid: checkValidity(\r\n        event.target.value,\r\n        this.state.orderForm[inputId].validation\r\n      ),\r\n    });\r\n    const updatedForm = updateObject(this.state.orderForm, {\r\n      [inputId]: updatedFormElement,\r\n    });\r\n\r\n    this.setState({\r\n      orderForm: updatedForm,\r\n    });\r\n\r\n    const validity = this.checkFormIsValid(updatedForm);\r\n    if (validity !== this.state.formIsValid) {\r\n      this.setState({\r\n        formIsValid: validity,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n    let form = (\r\n      <Aux>\r\n        <h4>Enter your Contact Data</h4>\r\n        <form onSubmit={this.orderHandler}>\r\n          {formElementsArray.map((element) => (\r\n            <Input\r\n              key={element.id}\r\n              elementType={element.config.elementType}\r\n              elementConfig={element.config.elementConfig}\r\n              value={element.config.elementValue}\r\n              changed={(event) => this.inputChangedHandler(event, element.id)}\r\n              invalid={!element.config.valid}\r\n              shouldValidate={element.config.validation}\r\n              interacted={element.config.interacted}\r\n            />\r\n          ))}\r\n          <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n            Continue\r\n          </Button>\r\n        </form>\r\n      </Aux>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return <div className={styles.ContactData}>{form}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ingredients: state.burgerBuilder.ingredients,\r\n  totalPrice: state.burgerBuilder.totalPrice,\r\n  loading: state.order.loading,\r\n  token: state.auth.token,\r\n  userId: state.auth.userId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onOrderBurger: (orderData, token) =>\r\n    dispatch(actions.purchaseBurger(orderData, token)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Checkout extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      meat: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n    },\r\n  };\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchaseRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <div>\r\n          {purchaseRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + \"/contact-data\"}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ingredients: state.burgerBuilder.ingredients,\r\n  purchased: state.order.purchased,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [styles.InputElement];\r\n  if (props.invalid && props.shouldValidate && props.interacted) {\r\n    inputClasses.push(styles.Invalid);\r\n  }\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.elementValue}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.elementValue}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => (\r\n            <option value={option.value} key={option.value}>\r\n              {option.display}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.elementValue}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Input}>\r\n      <label>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2oCfx\",\"InputElement\":\"Input_InputElement__3uia5\",\"Invalid\":\"Input_Invalid__3BX3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3kceq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__IGFGI\"};"],"sourceRoot":""}